# vim: ft=zsh
# =============================================================================
# ZSH Configuration
# =============================================================================

# -----------------------------------------------------------------------------
# Oh My Zsh Configuration
# -----------------------------------------------------------------------------
export ZSH="$HOME/.oh-my-zsh"

# Disable oh-my-zsh theme since we're using starship
ZSH_THEME=""

# Oh My Zsh plugins
plugins=(
    alias-finder
    ansible
    archlinux
    colored-man-pages
    
    docker
    docker-compose
    git
    golang
    gradle
    rust
    zsh-autosuggestions
    zsh-interactive-cd
    zsh-syntax-highlighting
)

# Load Oh My Zsh
[[ -f "$ZSH/oh-my-zsh.sh" ]] && source "$ZSH/oh-my-zsh.sh"

# -----------------------------------------------------------------------------
# Environment Variables
# -----------------------------------------------------------------------------
export EDITOR="nvim"
export PAGER="bat --paging=always --style=plain"
export MANPAGER="sh -c 'col -bx | bat -l man -p'"
export GPG_TTY=$(tty)
export GOPATH="$HOME/go"
export DOCKER_CONFIG="$HOME/.config/docker"
export HISTFILE="$HOME/.local/state/zsh/history"

# Development environments
export SDKMAN_DIR="$HOME/.sdkman"
export BUN_INSTALL="$HOME/.bun"
export PNPM_HOME="$HOME/.local/share/pnpm"

# -----------------------------------------------------------------------------
# PATH Configuration
# -----------------------------------------------------------------------------
# Function to safely add to PATH
add_to_path() {
    case ":$PATH:" in
        *":$1:"*) ;;
        *) export PATH="$1:$PATH" ;;
    esac
}

# Add directories to PATH
add_to_path "$BUN_INSTALL/bin"
add_to_path "${KREW_ROOT:-$HOME/.krew}/bin"
add_to_path "$PNPM_HOME"

# -----------------------------------------------------------------------------
# FZF Configuration
# -----------------------------------------------------------------------------
[[ -f ~/.fzf.zsh ]] && source ~/.fzf.zsh

export FZF_DEFAULT_OPTS=" \
--color=bg+:#414559,bg:#303446,spinner:#f2d5cf,hl:#e78284 \
--color=fg:#c6d0f5,header:#e78284,info:#ca9ee6,pointer:#f2d5cf \
--color=marker:#f2d5cf,fg+:#c6d0f5,prompt:#ca9ee6,hl+:#e78284"

# -----------------------------------------------------------------------------
# Aliases
# -----------------------------------------------------------------------------
alias cat="bat --theme=Catppuccin-frappe"
alias ls="lsd"
alias htop="btop"
alias vim="nvim"
alias vi="nvim"
alias grep="grep --color=auto"
alias ssh="kitty +kitten ssh"
alias kubectl="kubecolor"
alias kube-pod-allocation="~/Documents/Scripts/Kubernetes/node_pod_allocation.sh"

# Commented package manager aliases (uncomment if using paru)
# alias yay="paru"
# alias yeet="paru -Rcs"
# alias gimme="paru -S"

# -----------------------------------------------------------------------------
# ZSH Options
# -----------------------------------------------------------------------------
setopt GLOB_DOTS
unsetopt HIST_VERIFY

# Show dots while waiting for completion
COMPLETION_WAITING_DOTS="true"

# -----------------------------------------------------------------------------
# Completions Setup
# -----------------------------------------------------------------------------
# Enable bash completions
autoload -U +X bashcompinit && bashcompinit

# Add custom completions to fpath
fpath+=${ZSH_CUSTOM:-${ZSH:-~/.oh-my-zsh}/custom}/plugins/zsh-completions/src

# Tool completions
[[ -x /usr/bin/tofu ]] && complete -o nospace -C /usr/bin/tofu tofu
[[ -x /usr/local/bin/aws_completer ]] && complete -C '/usr/local/bin/aws_completer' aws

# Source completions (with error handling)
command -v kubectl >/dev/null && source <(kubectl completion zsh)
command -v kind >/dev/null && source <(kind completion zsh)
command -v warp-cli >/dev/null && source <(warp-cli generate-completions zsh 2>/dev/null)
command -v alloy >/dev/null && source <(alloy completion zsh)
command -v glab >/dev/null && source <(glab completion -s zsh)
command -v k8sgpt > /dev/null && source <(k8sgpt completion zsh)

# Set kubecolor to use kubectl completions
compdef kubecolor=kubectl

# -----------------------------------------------------------------------------
# External Tool Initialization
# -----------------------------------------------------------------------------
# SDKMAN
[[ -s "$SDKMAN_DIR/bin/sdkman-init.sh" ]] && source "$SDKMAN_DIR/bin/sdkman-init.sh"

# Bun completions
[[ -s "$HOME/.bun/_bun" ]] && source "$HOME/.bun/_bun"

# Dart CLI completions
[[ -f "$HOME/.config/.dart-cli-completion/zsh-config.zsh" ]] && source "$HOME/.config/.dart-cli-completion/zsh-config.zsh"

# Mise (development environment manager)
command -v mise >/dev/null && {
    eval "$(mise completion zsh)"
    eval "$(mise activate zsh)"
    eval "$(mise hook-env)"
}

# Modern shell enhancements
command -v starship >/dev/null && eval "$(starship init zsh)"
command -v zoxide >/dev/null && eval "$(zoxide init zsh --cmd cd)"
command -v atuin >/dev/null && eval "$(atuin init zsh)"
command -v thefuck >/dev/null && eval "$(thefuck --alias)"

# Display system info
command -v hyfetch >/dev/null && hyfetch

# -----------------------------------------------------------------------------
# Plugin Configuration
# -----------------------------------------------------------------------------
# Alias finder plugin settings
zstyle ':omz:plugins:alias-finder' autoload yes
zstyle ':omz:plugins:alias-finder' longer yes
zstyle ':omz:plugins:alias-finder' exact yes
zstyle ':omz:plugins:alias-finder' cheaper yes


# -----------------------------------------------------------------------------
# Neovim config 
# -----------------------------------------------------------------------------
export NVIM_APPNAME=nvim-personal

# -----------------------------------------------------------------------------
# Local Configuration
# -----------------------------------------------------------------------------
# Source local configuration if it exists
[[ -f ~/.zshrc.local ]] && source ~/.zshrc.local

# -----------------------------------------------------------------------------
# Direnv Configuration
# -----------------------------------------------------------------------------
eval "$(direnv hook zsh)"
